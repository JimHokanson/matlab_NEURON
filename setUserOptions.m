function varargout = setUserOptions(varargin)
% GUI to help create/modify options.txt file

% Code below autogenerated by GUIDE, see callback functions below

% Last Modified by GUIDE v2.5 31-Mar-2013 13:25:33

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
    'gui_Singleton',  gui_Singleton, ...
    'gui_OpeningFcn', @setUserOptions_OpeningFcn, ...
    'gui_OutputFcn',  @setUserOptions_OutputFcn, ...
    'gui_LayoutFcn',  [] , ...
    'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end % End initialization code - DO NOT EDIT

%============= Main functions (button callbacks): =========================

% --- Executes on button press in save_button.
function save_button_Callback(hObject, eventdata, handles)
% hObject    handle to save_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% get filename strings
nrniv_path = get(handles.nrniv_textbox,'String');
temp_data_path = get(handles.temp_data_textbox,'String');
sim_logger_path = get(handles.sim_logger_textbox,'String');
% error check
errorFlag = false;
if isempty(nrniv_path)
    h = msgbox('You must select the nrniv executable file.');
    errorFlag = true;
    uiwait(h);
end
if isempty(temp_data_path)
    h = msgbox('You must select a temp_data directory.');
    errorFlag = true;
    uiwait(h);
end
if isempty(sim_logger_path)
    h = msgbox('You must select a sim_logger data directory');
    errorFlag = true;
    uiwait(h);
end

% create options.txt if all paths selected
if ~errorFlag
  optionsString = sprintf('temp_data_base_path = %s \nsim_logger_root_path = %s \nnrniv_exe_path = %s',temp_data_path,sim_logger_path,nrniv_path);
  
  mfilePath = mfilename('fullpath');
  basePath = fileparts(mfilePath);
  optionsFileName = 'options.txt';
  optionsFilePath = fullfile(basePath,optionsFileName);
  
  fileID = fopen(optionsFilePath,'w');
  fprintf(fileID,'%s',optionsString);
  fclose(fileID);
  
  h = msgbox('Thank you, user options have been saved.');
  uiwait(h);
  
  % close GUI
  close(handles.figure1);
end

% --- Executes on button press in sim_logger_browse_button.
function sim_logger_browse_button_Callback(hObject, eventdata, handles)
% hObject    handle to sim_logger_browse_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

sim_logger_browse_path = uigetdir(pwd,'Select a directory to store simulation logger data');
if sim_logger_browse_path
    set(handles.sim_logger_textbox,'String',sim_logger_browse_path)
end

% --- Executes on button press in temp_data_browse_button.
function temp_data_browse_button_Callback(hObject, eventdata, handles)
% hObject    handle to temp_data_browse_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

temp_data_browse_path = uigetdir(pwd,'Select a directory to store temporary data');
if temp_data_browse_path
    set(handles.temp_data_textbox,'String',temp_data_browse_path)
end

% --- Executes on button press in nrniv_browse_button.
function nrniv_browse_button_Callback(hObject, eventdata, handles)
% hObject    handle to nrniv_browse_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if ispc
    filterspec = '*.exe';
    title = 'Find nrniv.exe';
else
    filterspec = '*.*';
    title = 'Find nrniv executable';
end

[filename,pathname] = uigetfile(filterspec,title);
nrniv_browse_path = fullfile(pathname,filename);
if nrniv_browse_path
    set(handles.nrniv_textbox,'String',nrniv_browse_path)
end

%==================== Required functions: ===============================

% --- Executes just before setUserOptions is made visible.
function setUserOptions_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to setUserOptions (see VARARGIN)

% Choose default command line output for setUserOptions
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes setUserOptions wait for user response (see UIRESUME)
% uiwait(handles.figure1);

% --- Outputs from this function are returned to the command line.
function varargout = setUserOptions_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


function sim_logger_textbox_Callback(hObject, eventdata, handles)
% hObject    handle to sim_logger_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of sim_logger_textbox as text
%        str2double(get(hObject,'String')) returns contents of sim_logger_textbox as a double

% --- Executes during object creation, after setting all properties.
function sim_logger_textbox_CreateFcn(hObject, eventdata, handles)
% hObject    handle to sim_logger_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function temp_data_textbox_Callback(hObject, eventdata, handles)
% hObject    handle to temp_data_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of temp_data_textbox as text
%        str2double(get(hObject,'String')) returns contents of temp_data_textbox as a double

% --- Executes during object creation, after setting all properties.
function temp_data_textbox_CreateFcn(hObject, eventdata, handles)
% hObject    handle to temp_data_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function nrniv_textbox_Callback(hObject, eventdata, handles)
% hObject    handle to nrniv_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of nrniv_textbox as text
%        str2double(get(hObject,'String')) returns contents of nrniv_textbox as a double

% --- Executes during object creation, after setting all properties.
function nrniv_textbox_CreateFcn(hObject, eventdata, handles)
% hObject    handle to nrniv_textbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
