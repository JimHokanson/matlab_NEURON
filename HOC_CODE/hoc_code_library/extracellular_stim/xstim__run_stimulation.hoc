func xstim__run_stimulation() { local stim_scale, fired, run_complicated_ap_analysis
/*

	ap_fired = xstim__run_stimulation(stim_scale,save_vm,*run_complicated_analysis)

GLOBALS 
--------------------------------------------------------
xstim__node_vm_hist : output of sim_logging__record_node_voltages()

INPUTS 
---------------------------------------------------------
stim_scale : 
save_vm    : Whether or not to save the membrane voltage to disk

OUTPUTS 
----------------------------------------------------------
ap_fired : true if stimulus elicited an AP (see  xstim__did_ap_fire)

*/

	//NO LONGER USED .........................
	//I should throw an error ...
	//Just wanted to keep for reference ...



	stim_scale = $1
	save_vm    = $2
	
	if (numarg() == 3){
		run_complicated_ap_analysis = $3
	} else {
		run_complicated_ap_analysis = 0
	}
	
	xstim__apply_stimulus(stim_scale)

	
	//xstim__run_simulation_timer1 = startsw()
	
	run()
	
	//NOTE: Need to modify to take advantage of hash
	if (save_vm) {
		saveDataMatrix("vm","data/extracellular_stim_mrg_vm.bin",xstim__node_vm_hist)
	}
	
	//print "xstim__run_simulation_timer1"
	//print startsw() - xstim__run_simulation_timer1

	//xstim__run_simulation_timer2 = startsw()
	fired = xstim__did_ap_fire(run_complicated_ap_analysis)
	//print "xstim__run_simulation_timer2"
	//print startsw() - xstim__run_simulation_timer2
	
	return fired
	
}

