proc xstim__setup_stim_playback() { localobj xstim__temp_stim_vector
/*  xstim__setup_stim_playback

Creates the vectors that are played into the extracellular potential
to apply the stimulus. The values in these vectors are not populated
until the scaling step (xstim__apply_stimulus).  This code just says
"this vector should get played into here when I run"

USAGE
------------------------------------------------------------
xstim__setup_stim_playback

GLOBALS 
------------------------------------------------------------
xstim__all_secs

CREATES 
------------------------------------------------------------
xstim__stim_vector_list

*/

//FOR DEBUGGING
//print "Setting up stim playback"

xstim__temp_stim_vector = new Vector()
n_stim_changes = xstim__t_vec.size	

//Careful, made error of using for(x)
//See http://www.neuron.yale.edu/phpBB/viewtopic.php?f=15&t=2663

if (!(xstim__playback_initialized && xstim__n_play_orig == n_stim_changes)) {

//NOTE: If initialized already the list would append but we would only set the vectors
//in the earlier part of the list :/
if (xstim__playback_initialized) {
	xstim__stim_vector_list = new List()
}

xstim__playback_initialized = 1
xstim__n_play_orig = n_stim_changes

forsec xstim__all_secs {
	for (x,0) {
	
		xstim__temp_stim_vector = new Vector(n_stim_changes)
		xstim__temp_stim_vector.play(&e_extracellular(x),xstim__t_vec)
		xstim__stim_vector_list.append(xstim__temp_stim_vector)
	}
}

}

}





//The start of perhaps more efficient code ... ============================

/*
objref xstim__stim_vector[n_sections]

nStimChanges = t_vec.size

cur_sec = 0
forsec axon
	for (x) {
		xstim__stim_vector[curI] = new Vector(nStimChanges)	
		for (i = 0; i < nStimChanges; i=i+1) {
			s.x[i] = v_ext_vec.x[cur_I]
			cur_I  = cur_I + 1
		}
	
	
	}
}
*/