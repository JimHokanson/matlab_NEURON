proc xstim__setup_stim_playback() { local n_stim_changes localobj xstim__temp_stim_vector
/*  xstim__setup_stim_playback

Creates the vectors that are played into the extracellular potential
to apply the stimulus. The values in these vectors are not populated
until the scaling step (xstim__apply_stimulus).  This code just says
"this vector should get played into here when I run"

Essentially this then becomes a way of initializing a bunch of objects.

USAGE
------------------------------------------------------------
xstim__setup_stim_playback()

GLOBALS 
------------------------------------------------------------
xstim__all_sectionlist 	:
xstim__t_vec :
xstim__playback_initialized :
xstim__cell_setup_changed_since_last_playback_initialization :
xstim__stim_vector_list :

POPULATES 
------------------------------------------------------------
xstim__stim_vector_list

SEE ALSO
--------------------------------------------------------------


NEURON.simulation.extracellular_stim.init__create_stim_info


*/

n_stim_changes = xstim__t_vec.size

//FOR DEBUGGING
//print "Setting up stim playback"

//NOTE: At some point I thought I saw that this needs to be defined outside of any 
//loops. It can then be redefined in the loops. I am not sure where documentation
//discussing this is.
xstim__temp_stim_vector = new Vector()

//Careful, made error of using for(x)
//See http://www.neuron.yale.edu/phpBB/viewtopic.php?f=15&t=2663


	if (!(xstim__playback_initialized && !xstim__cell_setup_changed_since_last_playback_initialization)) {
		//NOTE: If initialized already the list would append but 
		//we would only set the vectors in the earlier part of the list :/
		//Thus we need to reset things ...
		if (xstim__playback_initialized) {
			//This is essentially a reset function ...
			//http://www.neuron.yale.edu/neuron/static/docs/help/neuron/general/classes/list.html#remove_all
			xstim__stim_vector_list.remove_all()
		}

		xstim__playback_initialized = 1
		xstim__cell_setup_changed_since_last_playback_initialization = 0

		forsec xstim__all_sectionlist {
			for (x,0) {
				xstim__temp_stim_vector = new Vector(n_stim_changes)
				xstim__temp_stim_vector.play(&e_extracellular(x),xstim__t_vec)
				xstim__stim_vector_list.append(xstim__temp_stim_vector)
			}
		}

	}

}