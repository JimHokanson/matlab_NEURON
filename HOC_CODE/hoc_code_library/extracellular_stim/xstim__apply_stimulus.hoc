proc xstim__apply_stimulus() { local cur_stim_index, cur_seg_index, cur_sec_index, n_stim_changes, stim_scale localobj s
/*  xstim__apply_stimulus

USAGE
------------------------------------------------------------------
xstim__apply_stimulus(stim_scale)

NOTE: Prior to this the following must occur:
1) Define a cell model
2) Create a stimulus section list : 
	    - xstim__create_stim_sectionlist or create_stim_sectionlist (local)
3) Load stim data : 
		- xstim__load_data
4) Initialize Playback : 
		- xstim__setup_stim_playback
		- this assigns playback vectors for each section
		
GLOBALS 
------------------------------------------------------------------
xstim__all_sectionlist  : see xstim__create_all_sectionlist in xstim__setup_stim_playback
xstim__stim_vector_list : 
xstim__t_vec 			:

INPUTS
--------------------------------------------------------------------
stim_scale : This is a multiplier that scales the input applied voltage
			  by this specfied value.

 
*/

//Initialization --------------------------------------
cur_stim_index = 0 	//Indexes into stimulation matrix, includes space & time
cur_sec_index  = 0	//Debugging variable, not currently used
cur_seg_index  = 0  //
n_stim_changes = xstim__t_vec.size
stim_scale     = $1
s = new Vector()

forsec xstim__all_sectionlist {
	for (x,0) {
		s = xstim__stim_vector_list.o(cur_seg_index)
		for (i = 0; i < n_stim_changes; i=i+1) {
			//NOTE: xstim__v_ext_in is a global variable
			s.x[i] = xstim__v_ext_in.x[cur_stim_index]*stim_scale
			cur_stim_index  = cur_stim_index + 1
			
			//Debugging lines
			// if(i == 1){
				// print s.x[i]
			// }
			//print cur_stim_index
		}
		cur_seg_index = cur_seg_index + 1
	}
}


}