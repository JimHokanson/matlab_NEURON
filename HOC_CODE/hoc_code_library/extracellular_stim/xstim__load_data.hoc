proc xstim__load_data(){
/* xstim__load_data

This functions loads the stimulus data into variables. 
The data is transferred into NEURON at this time via writing 
binary files to disk. The stimulus data still needs to be applied
to the neural model.

USAGE
------------------------------------------------------------------
xstim__load_data()

GLOBALS:
-------------------------------------------------------------------
sim_hash 		: Class: string, this is defined by the simulation and is a unique string
				  for parallel execution without file conflicts ...
xstim__t_vec    : Class: Vector (see definintions below)
xstim__v_ext_in : Class: Vector

POPULATES
-----------------------------------------------------------------
xstim__t_vec    : time at which to apply the stimulus changes ...
xstim__v_ext_in : stimulus to deliver to each segment

FILE LOCATIONS
------------------------------------------------------------------
It is assumed that the file locations are in a subdirectory of the model:
/inputs/[sim_hash]t_vec.bin
/inputs/[sim_hash]v_ext.bin

v_ext.bin format 
------------------------------------------------------------------
NOTE: This should be linear, first by time, then by location
NOT A MATRIX
x(1),t(1) - index 0
x(1),t(2) - 1
x(1),t(3) - 2
x(2),t(1) - 3
etc
*/

//DEBUGGING
//print "Loading Stim Data"

	strdef final_t_path, final_v_path

	//NOTE: sim_hash is global ...
	sprint(final_t_path,"%s/%s%s",binary_data_root_path,sim_hash,"t_vec.bin")
	sprint(final_v_path,"%s/%s%s",binary_data_root_path,sim_hash,"v_ext.bin")
	
	file__loadDataVector(final_t_path,xstim__t_vec)
	file__loadDataVector(final_v_path,xstim__v_ext_in)
}



